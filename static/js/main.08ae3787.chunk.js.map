{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/quotes/HighlightedQuote.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/quotes/HighlightedQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","LoadingSpinner","spinner","NoQuotesFound","noquotes","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","a","message","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","ok","Error","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","Fragment","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","HighlightedQuote","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","useParams","loadedComments","addedCommentHandler","QuoteDetail","match","useRouteMatch","console","log","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","render","document","getElementById"],"mappings":"wHACAA,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,gBCArID,EAAOC,QAAU,CAAC,OAAS,+BAA+B,KAAO,6BAA6B,IAAM,4BAA4B,OAAS,iC,iBCAzID,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,iBCA3DD,EAAOC,QAAU,CAAC,KAAO,0B,kBCAzBD,EAAOC,QAAU,CAAC,QAAU,kC,gBCA5BD,EAAOC,QAAU,CAAC,SAAW,kC,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,qB,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,kC,gBCA1BD,EAAOC,QAAU,CAAC,SAAW,6B,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,4B,gBCAzBD,EAAOC,QAAU,CAAC,SAAW,iC,gBCA7BD,EAAOC,QAAU,CAAC,KAAO,uB,uJCkBVC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAErB,cAAC,IAAD,CAAMJ,UAAU,MAAMK,GAAE,kBAAaN,EAAMO,IAA3C,iC,iBCuCSC,EApCG,SAACR,GACjB,IAXkBS,EAAQC,EAWpBC,EAAUC,cACVC,EAAWC,cAGXC,EAAiD,QADnC,IAAIC,gBAAgBH,EAASI,QACVC,IAAI,QAErCC,GAjBYV,EAiBcT,EAAMS,OAjBZC,EAiBoBK,EAhBvCN,EAAOW,MAAK,SAACC,EAAQC,GAC1B,OAAIZ,EACKW,EAAOd,GAAKe,EAAOf,GAAK,GAAK,EAE7Bc,EAAOd,GAAKe,EAAOf,GAAK,GAAK,MAoBxC,OACE,eAAC,WAAD,WACE,qBAAKN,UAAWC,IAAQqB,QAAxB,SACE,yBAAQC,QATe,WAC3Bb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAqB,OAAS,UAM7C,kBACQA,EAAqB,aAAe,iBAG9C,oBAAId,UAAWC,IAAQyB,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVF,OAAQwB,EAAMxB,OACdD,KAAMyB,EAAMzB,MAHPyB,EAAMtB,a,iBClCRuB,EAJQ,WACrB,OAAO,qBAAK7B,UAAWC,IAAQ6B,W,iBCSlBC,EATO,WACpB,OACE,sBAAK/B,UAAWC,IAAQ+B,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMhC,UAAU,MAAMK,GAAG,aAAzB,6B,uCCLN,SAAS4B,EAAYC,EAAOC,GAC1B,MAAoB,SAAhBA,EAAOC,KACF,CACLC,KAAM,KACNC,MAAO,KACPC,OAAQ,WAIQ,YAAhBJ,EAAOC,KACF,CACLC,KAAMF,EAAOK,aACbF,MAAO,KACPC,OAAQ,aAIQ,UAAhBJ,EAAOC,KACF,CACLC,KAAM,KACNC,MAAOH,EAAOM,aACdF,OAAQ,aAILL,EAgCMQ,MA7Bf,SAAiBC,GAA4C,IAA3BC,EAA0B,wDAC1D,EAA8BC,qBAAWZ,EAAa,CACpDM,OAAQK,EAAmB,UAAY,KACvCP,KAAM,KACNC,MAAO,OAHT,mBAAOQ,EAAP,KAAkBC,EAAlB,KAMMC,EAAcC,sBAAW,uCAC7B,WAAgBC,GAAhB,eAAAC,EAAA,6DACEJ,EAAS,CAAEX,KAAM,SADnB,kBAG+BO,EAAgBO,GAH/C,OAGUV,EAHV,OAIIO,EAAS,CAAEX,KAAM,UAAWI,iBAJhC,gDAMIO,EAAS,CACPX,KAAM,QACNK,aAAc,KAAMW,SAAW,0BARrC,yDAD6B,sDAa7B,CAACT,IAGH,OAAO,aACLK,eACGF,ICvDDO,EAAkB,4CAEjB,SAAeC,IAAtB,+B,4CAAO,oCAAAH,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,iBADvB,cACCG,EADD,gBAEcA,EAASC,OAFvB,UAECpB,EAFD,OAIAmB,EAASE,GAJT,sBAKG,IAAIC,MAAMtB,EAAKe,SAAW,2BAL7B,OAUL,IAAWQ,KAFLC,EAAoB,GAERxB,EACVyB,EADgB,aAEpBxD,GAAIsD,GACDvB,EAAKuB,IAGVC,EAAkBrC,KAAKsC,GAhBpB,yBAmBED,GAnBF,6C,sBAsBA,SAAeE,EAAtB,kC,4CAAO,WAA8BC,GAA9B,mBAAAb,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,mBAA8BW,EAA9B,UADvB,cACCR,EADD,gBAEcA,EAASC,OAFvB,UAECpB,EAFD,OAIAmB,EAASE,GAJT,sBAKG,IAAIC,MAAMtB,EAAKe,SAAW,0BAL7B,cAQCa,EARD,aASH3D,GAAI0D,GACD3B,GAVA,kBAaE4B,GAbF,6C,sBAgBA,SAAeC,EAAtB,kC,4CAAO,WAAwBC,GAAxB,iBAAAhB,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,gBAAmC,CAC7De,OAAQ,OACRC,KAAMC,KAAKC,UAAUJ,GACrBK,QAAS,CACP,eAAgB,sBALf,cACChB,EADD,gBAQcA,EAASC,OARvB,UAQCpB,EARD,OAUAmB,EAASE,GAVT,sBAWG,IAAIC,MAAMtB,EAAKe,SAAW,2BAX7B,gCAcE,MAdF,4C,sBAiBA,SAAeqB,EAAtB,kC,4CAAO,WAA0BvB,GAA1B,iBAAAC,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,qBAAgCH,EAAYc,QAA5C,SAA4D,CACtFI,OAAQ,OACRC,KAAMC,KAAKC,UAAUrB,EAAYwB,aACjCF,QAAS,CACP,eAAgB,sBALf,cACChB,EADD,gBAQcA,EAASC,OARvB,UAQCpB,EARD,OAUAmB,EAASE,GAVT,sBAWG,IAAIC,MAAMtB,EAAKe,SAAW,0BAX7B,gCAcE,CAAEuB,UAAWtC,EAAKuC,OAdpB,4C,sBAiBA,SAAeC,EAAtB,kC,4CAAO,WAA8Bb,GAA9B,uBAAAb,EAAA,sEACkBI,MAAM,GAAD,OAAIF,EAAJ,qBAAgCW,EAAhC,UADvB,cACCR,EADD,gBAGcA,EAASC,OAHvB,UAGCpB,EAHD,OAKAmB,EAASE,GALT,sBAMG,IAAIC,MAAMtB,EAAKe,SAAW,2BAN7B,OAWL,IAAWQ,KAFLkB,EAAsB,GAEVzC,EACV0C,EADgB,aAEpBzE,GAAIsD,GACDvB,EAAKuB,IAGVkB,EAAoBtD,KAAKuD,GAjBtB,yBAoBED,GApBF,6C,sBC9DP,IA6BeE,EA7BG,WAChB,MAKItC,EAAQY,GAAc,GAJxBN,EADF,EACEA,YACAT,EAFF,EAEEA,OACM0B,EAHR,EAGE5B,KACAC,EAJF,EAIEA,MAOF,OAJA2C,qBAAU,WACRjC,MACA,CAACA,IAEW,YAAXT,EACM,qBAAKvC,UAAU,WAAf,SACL,cAAC,EAAD,MAIDsC,EACM,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAG5B,cAAXC,GAA4B0B,GAAsC,IAAvBA,EAAYiB,OAInD,cAAC,EAAD,CAAW1E,OAAQyD,IAHjB,cAAC,EAAD,K,iBC7BIkB,EAJF,SAACpF,GACZ,OAAO,qBAAKC,UAAWC,IAAQmF,KAAxB,SAA+BrF,EAAMsF,Y,iBCiE/BC,EA7DG,SAACvF,GACjB,MAAoCwF,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAiBC,mBACjBC,EAAeD,mBAqBrB,OACE,eAAC,IAAME,SAAP,WACE,cAAC,IAAD,CACEC,KAAMN,EACNpC,QAAS,SAACxC,GAAD,MACP,yEAGJ,cAAC,EAAD,UACE,uBACEmF,QAlBmB,WACzBN,GAAc,IAkBRzF,UAAWC,IAAQ+F,KACnBC,SA/BR,SAA2BC,GACzBA,EAAMC,iBAEN,IAAMC,EAAgBV,EAAeW,QAAQC,MACvCC,EAAcX,EAAaS,QAAQC,MAIzCvG,EAAMyG,WAAW,CAAEpG,OAAQgG,EAAejG,KAAMoG,KAoB5C,UAKGxG,EAAM0G,WACL,qBAAKzG,UAAWC,IAAQyG,QAAxB,SACE,cAAC,EAAD,MAIJ,sBAAK1G,UAAWC,IAAQ0G,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOxE,KAAK,OAAO9B,GAAG,SAASuG,IAAKnB,OAEtC,sBAAK1F,UAAWC,IAAQ0G,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUtG,GAAG,OAAOwG,KAAK,IAAID,IAAKjB,OAEpC,qBAAK5F,UAAWC,IAAQ8G,QAAxB,SACE,wBAAQ/G,UAAU,MAAMuB,QAjCJ,WAC5BkE,GAAc,IAgCN,kCCtCGuB,EAhBE,WACf,MAAgCtE,EAAQwB,GAAhClB,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OACf7B,EAAUC,cAEhBsE,qBAAU,WACO,cAAX1C,GACF7B,EAAQc,KAAK,aAEd,CAACe,EAAQ7B,IAKZ,OAAO,cAAC,EAAD,CAAW+F,UAAsB,YAAXlE,EAAsBiE,WAH3B,SAACrC,GACvBnB,EAAYmB,O,iBCND8C,EATU,SAAClH,GACxB,OACE,yBAAQC,UAAWC,IAAQ2B,MAA3B,UACE,4BAAI7B,EAAMI,OACV,qCAAaJ,EAAMK,a,mCCsCV8G,GAtCQ,SAACnH,GACtB,IAAMoH,EAAiBxB,mBACvB,EAAuCjD,EAAQ+B,GAAvCzB,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAQD,EAA7B,EAA6BA,MAErB8E,EAAmBrH,EAAnBqH,eAERnC,qBAAU,WACO,cAAX1C,GAA2BD,GAC7B8E,MAED,CAAC7E,EAAQD,EAAO8E,IACnB,IAAMC,EAAoB,SAACnB,GACzBA,EAAMC,iBAEN,IAAMI,EAAcY,EAAed,QAAQC,MAE3CtD,EAAY,CAAE0B,YAAa,CAAEvE,KAAMoG,GAAevC,QAASjE,EAAMiE,UAEjEmD,EAAed,QAAQC,MAAQ,IAEjC,OACE,uBAAMtG,UAAWC,KAAQ+F,KAAMC,SAAUoB,EAAzC,UACc,YAAX9E,GACC,qBAAKvC,UAAU,WAAf,SACE,cAAC,EAAD,MAGJ,sBAAKA,UAAWC,KAAQ0G,QAASV,SAAUoB,EAA3C,UACE,uBAAOT,QAAQ,UAAf,0BACA,0BAAUtG,GAAG,UAAUwG,KAAK,IAAID,IAAKM,OAEvC,qBAAKnH,UAAWC,KAAQ8G,QAAxB,SACE,wBAAQ/G,UAAU,MAAlB,+B,oBC5BOsH,GARK,SAACvH,GACnB,OACE,oBAAIC,UAAWC,KAAQC,KAAvB,SACE,4BAAIH,EAAMI,U,oBCQDoH,GAVM,SAACxH,GACpB,OACE,oBAAIC,UAAWC,KAAQuH,SAAvB,SACGzH,EAAMyH,SAAS7F,KAAI,SAAC8F,GAAD,OAClB,cAAC,GAAD,CAA8BtH,KAAMsH,EAAQtH,MAA1BsH,EAAQnH,UC2DnBoH,GAzDE,WACf,MAA8CnC,oBAAS,GAAvD,mBAAOoC,EAAP,KAAwBC,EAAxB,KAEQ5D,EADO6D,cACP7D,QACR,EAAsDtB,EAAQmC,GAAtD7B,EAAR,EAAQA,YAAaT,EAArB,EAAqBA,OAAcuF,EAAnC,EAA6BzF,KAK7B4C,qBAAU,WACRjC,EAAYgB,KACX,CAACA,EAAShB,IAEb,IAIIwE,EAJEO,EAAsB9E,uBAAY,WACtCD,EAAYgB,KACX,CAACA,EAAShB,IAuBb,MAnBe,YAAXT,IACFiF,EACE,qBAAKxH,UAAU,WAAf,SACE,cAAC,EAAD,OAKS,cAAXuC,GAA0BuF,GAAkBA,EAAe5C,OAAS,IACtEsC,EAAW,cAAC,GAAD,CAAcA,SAAUM,KAIxB,cAAXvF,GACEuF,GAA4C,IAA1BA,EAAe5C,SAEnCsC,EAAW,mBAAGxH,UAAU,WAAb,0CAIX,0BAASA,UAAWC,IAAQuH,SAA5B,UACE,gDACEG,GACA,wBAAQ3H,UAAU,MAAMuB,QArCC,WAC7BqG,GAAmB,IAoCf,2BAIDD,GACC,cAAC,GAAD,CACE3D,QAASA,EACToD,eAAgBW,IAGnBP,MCDQQ,GA/CK,WAClB,IAAMC,EAAQC,cAEPlE,EADQ6D,cACR7D,QACPmE,QAAQC,IAAIH,GACZ,MAKIvF,EAAQqB,GAAgB,GAJ1Bf,EADF,EACEA,YACAT,EAFF,EAEEA,OACM0B,EAHR,EAGE5B,KACAC,EAJF,EAIEA,MAOF,OAJA2C,qBAAU,WACRjC,EAAYgB,KACX,CAAChB,EAAagB,IAEd1B,EACM,mBAAGtC,UAAU,mBAAb,SAAiCsC,IAG5B,YAAXC,EACM,qBAAKvC,UAAU,WAAf,SACL,cAAC,EAAD,MAICiE,EAAY9D,KAKf,eAAC,IAAM0F,SAAP,WACE,cAAC,EAAD,CAAkB1F,KAAM8D,EAAY9D,KAAMC,OAAQ6D,EAAY7D,SAC9D,cAAC,IAAD,CAAOiI,KAAMJ,EAAMI,KAAMC,OAAK,EAA9B,SACE,qBAAKtI,UAAU,WAAf,SACE,cAAC,IAAD,CAAMA,UAAU,YAAYK,GAAE,UAAK4H,EAAMM,IAAX,aAA9B,+BAKJ,cAAC,IAAD,CAAOF,KAAI,UAAKJ,EAAMI,KAAX,aAAX,SACE,cAAC,GAAD,SAdG,iD,oBCdIG,GAtBQ,WACrB,OACE,yBAAQxI,UAAWC,KAAQwI,OAA3B,UACE,qBAAKzI,UAAWC,KAAQyI,KAAxB,0BACA,qBAAK1I,UAAWC,KAAQ0I,IAAxB,SACE,+BACE,6BACE,cAAC,IAAD,CAAStI,GAAG,UAAUuI,gBAAiB3I,KAAQ4I,OAA/C,0BAIF,6BACE,cAAC,IAAD,CAASxI,GAAG,aAAauI,gBAAiB3I,KAAQ4I,OAAlD,oC,oBCLGC,GAPA,SAAC/I,GACd,OAAO,eAAC,IAAM8F,SAAP,WACH,cAAC,GAAD,IACA,sBAAM7F,UAAWC,KAAQ8I,KAAzB,SAAgChJ,EAAMsF,eCC7B2D,GANE,WACf,OAAO,qBAAKhJ,UAAU,WAAf,SACH,mDC2BSiJ,OAxBf,WACE,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOZ,KAAK,IAAIC,OAAK,EAArB,SACE,cAAC,IAAD,CAAUjI,GAAG,aAEf,cAAC,IAAD,CAAOgI,KAAK,UAAUC,OAAK,EAA3B,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,mBAAZ,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,aAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,GAAD,YCnBVa,IAASC,OACP,cAAC,IAAD,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.08ae3787.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__azYXH\",\"loading\":\"QuoteForm_loading__3nNEB\",\"control\":\"QuoteForm_control__N0ni9\",\"actions\":\"QuoteForm_actions__YcGqs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__2BWn_\",\"logo\":\"MainNavigation_logo__3XF_6\",\"nav\":\"MainNavigation_nav__Y9gVC\",\"active\":\"MainNavigation_active__y19Bp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3rTRi\",\"loading\":\"NewCommentForm_loading___QQZO\",\"control\":\"NewCommentForm_control__2YjD6\",\"actions\":\"NewCommentForm_actions__2UgH1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__9rMHt\",\"sorting\":\"QuoteList_sorting__1NYmB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2GaVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2dWDZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__25PCu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3PuY6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__2jKMX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__P7mm4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__3cAjq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__2k4Ox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__1aCu9\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom'\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`/quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const queryParams = new URLSearchParams(location.search);\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import classes from \"./NoQuotesFound.module.css\";\nimport { Link } from \"react-router-dom\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">Add a Quote</Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FIREBASE_DOMAIN = 'https://testfirebase-11421.firebaseio.com';\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quotes.');\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not fetch quote.');\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: 'POST',\n    body: JSON.stringify(quoteData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not create quote.');\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`, {\n    method: 'POST',\n    body: JSON.stringify(requestData.commentData),\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not add comment.');\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || 'Could not get comments.');\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound'\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n/* const DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"EURO\", text: \"Learning react is fun!.\" },\r\n  { id: \"q2\", author: \"MAX\", text: \"Learning react is boring!.\" },\r\n]; */\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect(()=>{\r\n    sendRequest();\r\n  },[sendRequest])\r\n\r\n  if(status === \"pending\"){\r\n    return <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  }\r\n\r\n  if(error){\r\n    return <p className=\"centered focused\">{error}</p>\r\n  }\r\n\r\n  if(status === \"completed\" && (!loadedQuote || loadedQuote.length === 0)){\r\n    return <NoQuotesFound />\r\n  }\r\n\r\n  return <QuoteList quotes={loadedQuote} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import React, { useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const formFocusedHandler = () => {\n    setIsEntering(true);\n  };\n\n  const finishEnteringHandler = () => {\n    setIsEntering(false);\n  }\n\n  return (\n    <React.Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"Are you sure you want to leave? All your entered data will be lost!\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={formFocusedHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className=\"btn\" onClick={finishEnteringHandler}>Add Quote</button>\n          </div>\n        </form>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from \"react\";\r\nimport QuoteForm from \"../components/quotes/QuoteForm\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { addQuote } from \"../lib/api\";\r\n\r\nconst NewQuote = () => {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === \"completed\") {\r\n      history.push(\"/quotes\");\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (quoteData) => {\r\n    sendRequest(quoteData);\r\n  };\r\n  return <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />;\r\n};\r\n\r\nexport default NewQuote;\r\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import { useRef, useEffect } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    \n    const enteredText = commentTextRef.current.value;\n\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n\n    commentTextRef.current.value = \"\";\n  };\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' && (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useState, useEffect, useCallback } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport LoadingSpinner from \"../../components/UI/LoadingSpinner\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [quoteId, sendRequest]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n\n  if (\n    status === \"completed\" &&\n    (!loadedComments || loadedComments.length === 0)\n  ) {\n    comments = <p className=\"centered\">No comments were added yet!</p>;\n  }\n\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import React, {useEffect} from \"react\";\r\nimport { useParams, Route, Link, useRouteMatch } from \"react-router-dom\";\r\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport Comments from \"../components/comments/Comments\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getSingleQuote } from \"../lib/api\";\r\n\r\n/* const DUMMY_QUOTES = [\r\n  { id: \"q1\", author: \"EURO\", text: \"Learning react is fun!.\" },\r\n  { id: \"q2\", author: \"MAX\", text: \"Learning react is boring!.\" },\r\n]; */\r\n\r\nconst QuoteDetail = () => {\r\n  const match = useRouteMatch();\r\n  const params = useParams();\r\n  const {quoteId} = params\r\n  console.log(match);\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuote,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  }, [sendRequest, quoteId]);\r\n\r\n  if(error){\r\n    return <p className=\"centered focused\">{error}</p>\r\n  }\r\n\r\n  if(status === \"pending\"){\r\n    return <div className=\"centered\">\r\n      <LoadingSpinner />\r\n    </div>\r\n  }\r\n\r\n  if (!loadedQuote.text) {\r\n    return <p>No quote found!</p>;\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <HighlightedQuote text={loadedQuote.text} author={loadedQuote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className=\"centered\">\r\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n      <Route path={`${match.path}/comments`}>\r\n        <Comments />\r\n      </Route>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default QuoteDetail;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport classes from \"./MainNavigation.module.css\";\r\n\r\nconst MainNavigation = () => {\r\n  return (\r\n    <header className={classes.header}>\r\n      <div className={classes.logo}>Great Quotes</div>\r\n      <nav className={classes.nav}>\r\n        <ul>\r\n          <li>\r\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\r\n              All Quotes\r\n            </NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\r\n              Add a Quote\r\n            </NavLink>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React from 'react';\r\nimport MainNavigation from './MainNavigation';\r\nimport classes from './Layout.module.css'\r\n\r\nconst Layout = (props) => {\r\n  return <React.Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n  </React.Fragment>;\r\n};\r\n\r\nexport default Layout;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return <div className='centered'>\r\n      <p>Page not found!</p>\r\n  </div>;\r\n};\r\n\r\nexport default NotFound;\r\n","import { Route, Switch, Redirect } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}